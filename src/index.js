'use strict';

/**
 * Get a matrix to display one glyph
 * @param {string} key - a single character
 * @return {Uint8Array}  (Buffer) for the lcd matrix
 * @example
 * let heartMatrix = getBufferFromGlyph('♡');
 */
exports.getBufferFromGlyph = (key) => {
      return Uint8Array.from(getBufferFromGlyphAsArray(key));
}

/**
 * Get a matrix to display one glyph
 * @param {string} key - a single character
 * @return {Array} for the lcd matrix
 */
const getBufferFromGlyphAsArray = (key) => {
      return font[key] || [];
}

/**
 * Get a matrix to display a line of glyphs
 * @param {string} line - a string of characters
 * @return {Uint8Array}  (Buffer) for the lcd matrix
 * @example
 * let heartSentenceMatrix = getBufferFromLine('♡ is a heart.');
 */
exports.getBufferFromLine = (line) => {
    return Uint8Array.from( exports.flatMap(getBufferFromGlyphAsArray, line.split('')) );
}

/**
 * Returns a String of 0 and 1 s in an array
 * @param {string} key - a string of one length which is the key for the font
 * @return {Array<string>} an Array of Strings with length 8 filled with '1' & '0's
 * @deprecated since version 1.4.0 - use getBufferFromGlyph instead
 */
exports.getChar = (key) => {
  return font[key].map(exports.binaryToStringBinary);
}

/**
 * Returns all of the valid glyps, which can be used for this font
 * @return {Array<string>} An Array of all of the Glyphs supprted in this font.
 */
exports.getAllGlyphs = () => {
  return Object.keys(font)
}

/**
 * Function of concat, but with both arrays as params
 * @param {Array} firstArray
 * @param {Array} secondArray
 * @return {Array} an new array made of both input arrays
 */
exports.concat = (firstArray,secondArray) => {
  return firstArray.concat(secondArray);
}

/**
 * maps against an array and flattens the mapped out put int one array
 * @param {function(key: any): Array<any>} mapFunction - the map function that returns an array
 * @param {Array} targetArray - array you want to map against to transform it.
 * @return {Array}
 */
exports.flatMap = (mapFunction,targetArray) => {
  return targetArray.map(mapFunction).reduce(exports.concat, []);
}

/**
 * Converts a number back to a 8 digit long string of 1 and 0s
 * @param {number} num to transform
 * @return {string} stringOfBinary 
 */
exports.binaryToStringBinary = (num) => {
  return num.toString(2).padStart(8,"0")
}



/**
 * The Font Data - turn your head to the right (up->)
 * The font baseline is one pixle up.
 * Most characters end with an empty line
 */
const font = {
    ' ': [
          0b00000000,
          0b00000000,
          0b00000000,
          0b00000000],
    '!': [
          0b01011111,
          0b00000000],
    '"': [
          0b00000011,
          0b00000000,
          0b00000011,
          0b00000000],
    '#': [
          0b00010100,
          0b00111110,
          0b00010100,
          0b00111110,
          0b00010100,
          0b00000000],
    '$': [
          0b00100100,
          0b01101010,
          0b00101011,
          0b00010010,
          0b00000000],
    '%': [
          0b01100011,
          0b00010011,
          0b00001000,
          0b01100100,
          0b01100011,
          0b00000000],
    '&': [
          0b00110110,
          0b01001001,
          0b01010110,
          0b00100000,
          0b01010000,
          0b00000000],
    '\'': [
          0b00000011,
          0b00000000],
    '(': [
          0b00011100,
          0b00100010,
          0b01000001,
          0b00000000],
    ')': [
          0b01000001,
          0b00100010,
          0b00011100,
          0b00000000],
    '*': [
          0b00101000,
          0b00011000,
          0b00001110,
          0b00011000,
          0b00101000,
          0b00000000],
    '+': [
          0b00001000,
          0b00001000,
          0b00111110,
          0b00001000,
          0b00001000,
          0b00000000],
    ',': [
          0b10110000,
          0b01110000,
          0b00000000],
    '-': [
          0b00001000,
          0b00001000,
          0b00001000,
          0b00001000,
          0b00000000],
    '.': [
          0b01100000,
          0b01100000,
          0b00000000],
    '/': [
          0b01100000,
          0b00011000,
          0b00000110,
          0b00000001,
          0b00000000],
    '0': [
          0b00111110,
          0b01000001,
          0b01000001,
          0b00111110,
          0b00000000],
    '1': [
          0b01000010,
          0b01111111,
          0b01000000,
          0b00000000],
    '2': [
          0b01100010,
          0b01010001,
          0b01001001,
          0b01000110,
          0b00000000],
    '3': [
          0b00100010,
          0b01000001,
          0b01001001,
          0b00110110,
          0b00000000],
    '4': [
          0b00011000,
          0b00010100,
          0b00010010,
          0b01111111,
          0b00000000],
    '5': [
          0b00100111,
          0b01000101,
          0b01000101,
          0b00111001,
          0b00000000],
    '6': [
          0b00111110,
          0b01001001,
          0b01001001,
          0b00110000,
          0b00000000],
    '7': [
          0b01100001,
          0b00010001,
          0b00001001,
          0b00000111,
          0b00000000],
    '8': [
          0b00110110,
          0b01001001,
          0b01001001,
          0b00110110,
          0b00000000],
    '9': [
          0b00000110,
          0b01001001,
          0b01001001,
          0b00111110,
          0b00000000],
    ':': [
          0b00010100,
          0b00000000],
    ';': [
          0b00100000,
          0b00010100,
          0b00000000],
    '<': [
          0b00001000,
          0b00010100,
          0b00100010,
          0b00000000],
    '=': [
          0b00010100,
          0b00010100,
          0b00010100,
          0b00000000],
    '>': [
          0b00100010,
          0b00010100,
          0b00001000,
          0b00000000],
    '?': [
          0b00000010,
          0b01011001,
          0b00001001,
          0b00000110,
          0b00000000],
    '@': [
          0b00111110,
          0b01001001,
          0b01010101,
          0b01011101,
          0b00001110,
          0b00000000],
    'A': [
          0b01111110,
          0b00010001,
          0b00010001,
          0b01111110,
          0b00000000],
    'B': [
          0b01111111,
          0b01001001,
          0b01001001,
          0b00110110,
          0b00000000],
    'C': [
          0b00111110,
          0b01000001,
          0b01000001,
          0b00100010,
          0b00000000],
    'D': [
          0b01111111,
          0b01000001,
          0b01000001,
          0b00111110,
          0b00000000],
    'E': [
          0b01111111,
          0b01001001,
          0b01001001,
          0b01000001,
          0b00000000],
    'F': [
          0b01111111,
          0b00001001,
          0b00001001,
          0b00000001,
          0b00000000],
    'G': [
          0b00111110,
          0b01000001,
          0b01001001,
          0b01111010,
          0b00000000],
    'H': [
          0b01111111,
          0b00001000,
          0b00001000,
          0b01111111,
          0b00000000],
    'I': [
          0b01000001,
          0b01111111,
          0b01000001,
          0b00000000],
    'J': [
          0b00110000,
          0b01000000,
          0b01000001,
          0b00111111,
          0b00000000],
    'K': [
          0b01111111,
          0b00001000,
          0b00010100,
          0b01100011,
          0b00000000],
    'L': [
          0b01111111,
          0b01000000,
          0b01000000,
          0b01000000,
          0b00000000],
    'M': [
          0b01111111,
          0b00000010,
          0b00001100,
          0b00000010,
          0b01111111,
          0b00000000],
    'N': [
          0b01111111,
          0b00000100,
          0b00001000,
          0b00010000,
          0b01111111,
          0b00000000],
    'O': [
          0b00111110,
          0b01000001,
          0b01000001,
          0b00111110,
          0b00000000],
    'P': [
          0b01111111,
          0b00001001,
          0b00001001,
          0b00000110,
          0b00000000],
    'Q': [
          0b00111110,
          0b01000001,
          0b01000001,
          0b10111110,
          0b00000000],
    'R': [
          0b01111111,
          0b00001001,
          0b00001001,
          0b01110110,
          0b00000000],
    'S': [
          0b01000110,
          0b01001001,
          0b01001001,
          0b00110010,
          0b00000000],
    'T': [
          0b00000001,
          0b00000001,
          0b01111111,
          0b00000001,
          0b00000001,
          0b00000000],
    'U': [
          0b00111111,
          0b01000000,
          0b01000000,
          0b00111111,
          0b00000000],
    'V': [
          0b00001111,
          0b00110000,
          0b01000000,
          0b00110000,
          0b00001111,
          0b00000000],
    'W': [
          0b00111111,
          0b01000000,
          0b00111000,
          0b01000000,
          0b00111111,
          0b00000000],
    'X': [
          0b01100011,
          0b00010100,
          0b00001000,
          0b00010100,
          0b01100011,
          0b00000000],
    'Y': [
          0b00000111,
          0b00001000,
          0b01110000,
          0b00001000,
          0b00000111,
          0b00000000],
    'Z': [
          0b01100001,
          0b01010001,
          0b01001001,
          0b01000111,
          0b00000000],
    '[': [
          0b01111111,
          0b01000001,
          0b00000000],
   '\\': [
          0b00000001,
          0b00000110,
          0b00011000,
          0b01100000,
          0b00000000],
    ']': [
          0b01000001,
          0b01111111,
          0b00000000],
    '_': [
          0b01000000,
          0b01000000,
          0b01000000,
          0b01000000,
          0b00000000],
    '`': [
          0b00000001,
          0b00000010,
          0b00000000],
    'a': [
          0b00100000,
          0b01010100,
          0b01010100,
          0b01111000,
          0b00000000],
    'b': [
          0b01111111,
          0b01000100,
          0b01000100,
          0b00111000,
          0b00000000],
    'c': [
          0b00111000,
          0b01000100,
          0b01000100,
          0b00101000,
          0b00000000],
    'd': [
          0b00111000,
          0b01000100,
          0b01000100,
          0b01111111,
          0b00000000],
    'e': [
          0b00111000,
          0b01010100,
          0b01010100,
          0b00011000,
          0b00000000],
    'f': [
          0b00000100,
          0b01111110,
          0b00000101,
          0b00000000],
    'g': [
          0b10011000,
          0b10100100,
          0b10100100,
          0b01111000,
          0b00000000],
    'h': [
          0b01111111,
          0b00000100,
          0b00000100,
          0b01111000,
          0b00000000],
    'i': [
          0b01000100,
          0b01111101,
          0b01000000,
          0b00000000],
    'j': [
          0b01000000,
          0b10000000,
          0b10000100,
          0b01111101,
          0b00000000],
    'k': [
          0b01111111,
          0b00010000,
          0b00101000,
          0b01000100,
          0b00000000],
    'l': [
          0b01000001,
          0b01111111,
          0b01000000,
          0b00000000],
    'm': [
          0b01111100,
          0b00000100,
          0b01111100,
          0b00000100,
          0b01111000,
          0b00000000],
    'n': [
          0b01111100,
          0b00000100,
          0b00000100,
          0b01111000,
          0b00000000],
    'o': [
          0b00111000,
          0b01000100,
          0b01000100,
          0b00111000,
          0b00000000],
    'p': [
          0b11111100,
          0b00100100,
          0b00100100,
          0b00011000,
          0b00000000],
    'q': [
          0b00011000,
          0b00100100,
          0b00100100,
          0b11111100,
          0b00000000],
    'r': [
          0b01111100,
          0b00001000,
          0b00000100,
          0b00000100,
          0b00000000],
    's': [
          0b01001000,
          0b01010100,
          0b01010100,
          0b00100100,
          0b00000000],
    't': [
          0b00000100,
          0b00111111,
          0b01000100,
          0b00000000],
    'u': [
          0b00111100,
          0b01000000,
          0b01000000,
          0b01111100,
          0b00000000],
    'v': [
          0b00011100,
          0b00100000,
          0b01000000,
          0b00100000,
          0b00011100,
          0b00000000],
    'w': [
          0b00111100,
          0b01000000,
          0b00111100,
          0b01000000,
          0b00111100,
          0b00000000],
    'x': [
          0b01000100,
          0b00101000,
          0b00010000,
          0b00101000,
          0b01000100,
          0b00000000],
    'y': [
          0b10011100,
          0b10100000,
          0b10100000,
          0b01111100,
          0b00000000],
    'z': [
          0b01100100,
          0b01010100,
          0b01001100,
          0b00000000],
    '{': [
          0b00001000,
          0b00110110,
          0b01000001,
          0b00000000],
    '|': [
          0b01111111,
          0b00000000],
    '}': [
          0b01000001,
          0b00110110,
          0b00001000,
          0b00000000],
    '~': [
          0b00001000,
          0b00000100,
          0b00001000,
          0b00000100,
          0b00000000],
    '♡': [
          0b00011110,
          0b00100001,
          0b01000001,
          0b10000110,
          0b10000110,
          0b01000001,
          0b00100001,
          0b00011110],
    '❤': [
          0b00011110,
          0b00111111,
          0b01111111,
          0b11111110,
          0b11111110,
          0b01111111,
          0b00111111,
          0b00011110],
    '^': [
          0b00000010,
          0b00000001,
          0b00000010,
          0b00000000]
}